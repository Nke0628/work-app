@startuml suriawaseProject

package 役職変更申請 {

    class 役職レベル{
        ?int 役職レベル
        static 取締役かどうか(int 役職レベル):bool
        高位役職への遷移かどうか( 役職レベル To役職レベル ):bool
    }

    class 役職変更申請 {
        - 役職変更申請ID
        - 対象SKYID
        - 変更理由
        - ステータス
        申請():void
        差戻():void
        削除():void
        承認():void
        変更役職修正( 変更役職 ):void
        変更理由修正( string ):void
    }

    class 変更役職 {
        いずれかが変更されているか():bool
        役職レベル条件が満たされているか():bool
    }

    class 変更名刺役職 {
        - string 現在名刺役職ID
        - 役職レベル 現在名刺役職レベル
        - string 変更名刺役職ID
        - 役職レベル 変更役職レベル
        役職が変更されているか():bool
        役職レベルが超えているか():bool
    }

    class 変更実役職{
        - string 現在実役職ID
        - 役職レベル 現在実役職レベル
        - string 変更実役職ID
        - 役職レベル 変更実役職レベル
        変更されているか():bool
        役職レベルが超えているか():bool
    }

    class 役職変更申請リポジトリ{
        生成(役職変更申請):bool or 役職変更申請
        保存(役職変更申請):bool or 役職変更申請
        削除(役職変更申請): bool
    }

    Interface 役職変更スタータス {
        申請中か():bool
        承認済みか():bool
        差し戻しか():bool
        遷移可能ステータスか( self ):bool
    }

    class 新規申請ステータス {
    }

    class 差戻ステータス {
    }

    class 申請中ステータス {
    }

    class 削除ステータス {
    }

    class 承認ステータス {
    }

    note right of 役職変更申請
        申請メソッド例
        public function 申請()
        {
            if ( !$this->変更役職->いずれかが変更されているか){
                throw new UnexpectedValueException('役職が変更されていません');
            }

            if ( !$this->変更役職->役職レベル条件が満たされているか){
                throw new UnexpectedValueException('役職レベル条件が満たされていません。');
            }

            $this->ステータス->遷移可能ステータスか( 申請中ステータス );
            $this->ステータス = 申請中ステータス;
        }
    end note

    変更役職 "1" *-down- "1" 変更名刺役職
    変更役職 "1" *-down- "1" 変更実役職
    役職変更申請 "1" *-down- "1" 変更役職
    役職変更申請 "1" *-down- "1" 役職変更スタータス
    変更実役職 "1" *-down- "1" 役職レベル
    変更名刺役職 "1" *-down- "1" 役職レベル
    役職変更スタータス <|-- 新規申請ステータス
    役職変更スタータス <|-- 差戻ステータス
    役職変更スタータス <|-- 申請中ステータス
    役職変更スタータス <|-- 削除ステータス
    役職変更スタータス <|-- 承認ステータス
}

@enduml
